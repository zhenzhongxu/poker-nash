#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EquityCalc
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="ComputeManager")]
	public partial class WorkloadDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertWorkload(Workload instance);
    partial void UpdateWorkload(Workload instance);
    partial void DeleteWorkload(Workload instance);
    partial void InsertException(Exception instance);
    partial void UpdateException(Exception instance);
    partial void DeleteException(Exception instance);
    #endregion
		
		public WorkloadDataContext() : 
				base(global::EquityCalc.Properties.Settings.Default.ComputeManagerConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public WorkloadDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public WorkloadDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public WorkloadDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public WorkloadDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Workload> Workloads
		{
			get
			{
				return this.GetTable<Workload>();
			}
		}
		
		public System.Data.Linq.Table<Exception> Exceptions
		{
			get
			{
				return this.GetTable<Exception>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.p_GetNextWorkload")]
		public ISingleResult<p_GetNextWorkloadResult> p_GetNextWorkload()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<p_GetNextWorkloadResult>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Workload")]
	public partial class Workload : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _WorkloadId;
		
		private byte _Status;
		
		private System.Nullable<System.DateTime> _StartTime;
		
		private System.Nullable<System.DateTime> _EndTime;
		
		private int _StartIndex;
		
		private int _EndIndex;
		
		private string _OutputLocation;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnWorkloadIdChanging(int value);
    partial void OnWorkloadIdChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    partial void OnStartTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnStartTimeChanged();
    partial void OnEndTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnEndTimeChanged();
    partial void OnStartIndexChanging(int value);
    partial void OnStartIndexChanged();
    partial void OnEndIndexChanging(int value);
    partial void OnEndIndexChanged();
    partial void OnOutputLocationChanging(string value);
    partial void OnOutputLocationChanged();
    #endregion
		
		public Workload()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkloadId", DbType="Int NOT NULL")]
		public int WorkloadId
		{
			get
			{
				return this._WorkloadId;
			}
			set
			{
				if ((this._WorkloadId != value))
				{
					this.OnWorkloadIdChanging(value);
					this.SendPropertyChanging();
					this._WorkloadId = value;
					this.SendPropertyChanged("WorkloadId");
					this.OnWorkloadIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt NOT NULL")]
		public byte Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> StartTime
		{
			get
			{
				return this._StartTime;
			}
			set
			{
				if ((this._StartTime != value))
				{
					this.OnStartTimeChanging(value);
					this.SendPropertyChanging();
					this._StartTime = value;
					this.SendPropertyChanged("StartTime");
					this.OnStartTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> EndTime
		{
			get
			{
				return this._EndTime;
			}
			set
			{
				if ((this._EndTime != value))
				{
					this.OnEndTimeChanging(value);
					this.SendPropertyChanging();
					this._EndTime = value;
					this.SendPropertyChanged("EndTime");
					this.OnEndTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartIndex", DbType="Int NOT NULL")]
		public int StartIndex
		{
			get
			{
				return this._StartIndex;
			}
			set
			{
				if ((this._StartIndex != value))
				{
					this.OnStartIndexChanging(value);
					this.SendPropertyChanging();
					this._StartIndex = value;
					this.SendPropertyChanged("StartIndex");
					this.OnStartIndexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndIndex", DbType="Int NOT NULL")]
		public int EndIndex
		{
			get
			{
				return this._EndIndex;
			}
			set
			{
				if ((this._EndIndex != value))
				{
					this.OnEndIndexChanging(value);
					this.SendPropertyChanging();
					this._EndIndex = value;
					this.SendPropertyChanged("EndIndex");
					this.OnEndIndexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OutputLocation", DbType="NVarChar(1000)")]
		public string OutputLocation
		{
			get
			{
				return this._OutputLocation;
			}
			set
			{
				if ((this._OutputLocation != value))
				{
					this.OnOutputLocationChanging(value);
					this.SendPropertyChanging();
					this._OutputLocation = value;
					this.SendPropertyChanged("OutputLocation");
					this.OnOutputLocationChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Exception")]
	public partial class Exception : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Exception1;
		
		private System.DateTime _OccuredTime;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnException1Changing(string value);
    partial void OnException1Changed();
    partial void OnOccuredTimeChanging(System.DateTime value);
    partial void OnOccuredTimeChanged();
    #endregion
		
		public Exception()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Exception", Storage="_Exception1", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Exception1
		{
			get
			{
				return this._Exception1;
			}
			set
			{
				if ((this._Exception1 != value))
				{
					this.OnException1Changing(value);
					this.SendPropertyChanging();
					this._Exception1 = value;
					this.SendPropertyChanged("Exception1");
					this.OnException1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OccuredTime", DbType="DateTime NOT NULL")]
		public System.DateTime OccuredTime
		{
			get
			{
				return this._OccuredTime;
			}
			set
			{
				if ((this._OccuredTime != value))
				{
					this.OnOccuredTimeChanging(value);
					this.SendPropertyChanging();
					this._OccuredTime = value;
					this.SendPropertyChanged("OccuredTime");
					this.OnOccuredTimeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class p_GetNextWorkloadResult
	{
		
		private int _Id;
		
		private int _WorkloadId;
		
		private int _StartIndex;
		
		private int _EndIndex;
		
		public p_GetNextWorkloadResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL")]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkloadId", DbType="Int NOT NULL")]
		public int WorkloadId
		{
			get
			{
				return this._WorkloadId;
			}
			set
			{
				if ((this._WorkloadId != value))
				{
					this._WorkloadId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartIndex", DbType="Int NOT NULL")]
		public int StartIndex
		{
			get
			{
				return this._StartIndex;
			}
			set
			{
				if ((this._StartIndex != value))
				{
					this._StartIndex = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndIndex", DbType="Int NOT NULL")]
		public int EndIndex
		{
			get
			{
				return this._EndIndex;
			}
			set
			{
				if ((this._EndIndex != value))
				{
					this._EndIndex = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
